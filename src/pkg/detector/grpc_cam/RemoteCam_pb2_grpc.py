# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import RemoteCam_pb2 as RemoteCam__pb2


class RemoteCamProtoStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetConfig = channel.unary_unary(
                '/RemoteCamProto.RemoteCamProto/GetConfig',
                request_serializer=RemoteCam__pb2.GetConfigRequest.SerializeToString,
                response_deserializer=RemoteCam__pb2.GetConfigResponse.FromString,
                )
        self.GetImage = channel.unary_unary(
                '/RemoteCamProto.RemoteCamProto/GetImage',
                request_serializer=RemoteCam__pb2.GetImageRequest.SerializeToString,
                response_deserializer=RemoteCam__pb2.GetImageResponse.FromString,
                )
        self.GetImageDepthmap = channel.unary_unary(
                '/RemoteCamProto.RemoteCamProto/GetImageDepthmap',
                request_serializer=RemoteCam__pb2.GetImageDepthmapRequest.SerializeToString,
                response_deserializer=RemoteCam__pb2.GetImageDepthmapResponse.FromString,
                )


class RemoteCamProtoServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImageDepthmap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RemoteCamProtoServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConfig,
                    request_deserializer=RemoteCam__pb2.GetConfigRequest.FromString,
                    response_serializer=RemoteCam__pb2.GetConfigResponse.SerializeToString,
            ),
            'GetImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImage,
                    request_deserializer=RemoteCam__pb2.GetImageRequest.FromString,
                    response_serializer=RemoteCam__pb2.GetImageResponse.SerializeToString,
            ),
            'GetImageDepthmap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImageDepthmap,
                    request_deserializer=RemoteCam__pb2.GetImageDepthmapRequest.FromString,
                    response_serializer=RemoteCam__pb2.GetImageDepthmapResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RemoteCamProto.RemoteCamProto', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RemoteCamProto(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemoteCamProto.RemoteCamProto/GetConfig',
            RemoteCam__pb2.GetConfigRequest.SerializeToString,
            RemoteCam__pb2.GetConfigResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemoteCamProto.RemoteCamProto/GetImage',
            RemoteCam__pb2.GetImageRequest.SerializeToString,
            RemoteCam__pb2.GetImageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImageDepthmap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RemoteCamProto.RemoteCamProto/GetImageDepthmap',
            RemoteCam__pb2.GetImageDepthmapRequest.SerializeToString,
            RemoteCam__pb2.GetImageDepthmapResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
